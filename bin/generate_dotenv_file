#!/bin/bash
#
# This script is used to generate a .env file using the 1Password CLI.
set -e
source bin/shared/one_password


cp .env.example .env

echo "" >> .env
echo "" >> .env
echo "" >> .env

OP_ITEM="Engineering/strapi-aws-prod"
AWS_ACCESS_KEY_ID=$(op_read "op://${OP_ITEM}/AWS_ACCESS_KEY_ID")
AWS_ACCESS_SECRET=$(op_read "op://${OP_ITEM}/AWS_ACCESS_SECRET")
echo "# == Generated by 1Password CLI" >> .env
echo "" >> .env
echo "# === From ${OP_ITEM}" >> .env
echo "AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}" >> .env
echo "AWS_ACCESS_SECRET=${AWS_ACCESS_SECRET}" >> .env

# Allow user to generate .env file with prod db credentials
if [ "$1" == "prod" ]; then
  OP_ITEM_DB="Engineering/fgf-cms-db-prod"

  echo "" >> .env
  echo "# === From ${OP_ITEM_DB}" >> .env
  echo "DATABASE_CLIENT=postgres" >> .env
  echo "DATABASE_HOST=$(op_read "op://${OP_ITEM_DB}/server")" >> .env
  echo "DATABASE_PORT=$(op_read "op://${OP_ITEM_DB}/port")" >> .env
  echo "DATABASE_NAME=$(op_read "op://${OP_ITEM_DB}/database")" >> .env
  echo "DATABASE_USERNAME=$(op_read "op://${OP_ITEM_DB}/username")" >> .env
  echo "DATABASE_PASSWORD=$(op_read "op://${OP_ITEM_DB}/password")" >> .env
  echo "DATABASE_SSL=true" >> .env
fi

echo "Done! See .env for your credentials."
